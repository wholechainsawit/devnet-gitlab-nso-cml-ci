variables:
  HTTP_ENABLE: "true"
  HTTPS_ENABLE: "true"
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "admin"

image:
  name: "nso:gitlabci"
  entrypoint: [""]

before_script:
    - source /opt/ncs/current/ncsrc

stages:
    - Build
    - Load Config to CML
    - Check Connection
    - NSO Dryrun Tests
    - Clean Up CML

Compile NSO Packages:
  stage: Build
  script:
    - mkdir -p release
    - make -C packages/config-dns/src clean all || exit 1
    - make -C packages/config-ntp/src clean all || exit 1
    - cp -af packages/* release/
  artifacts:
    paths:
      - release/

Load Topology config:
  stage: Load Config to CML
  script:
    - python3 cml/cml_load_topo.py --config cml/cml_2csr_topo.yaml

Check Connection:
  stage: Check Connection
  script:
    - python3 cml/cml_ping_check.py

Test config-dns Package:
  stage: NSO Dryrun Tests
  script:
    - mkdir -p /nso/run/packages
    - cp -af release/* /nso/run/packages
    - ln -s /opt/ncs/current/packages/neds/cisco-ios-cli-3.8 /nso/run/packages/cisco-ios-cli
    - /run-nso.sh > /dev/null 2>&1 &
    - bash nso/check_nso_readiness.sh
    - ncs_load -lm nso/ci_setup.xml -u admin
    - ncs_load -lm nso/load_devices.xml -u admin
    - echo "request devices fetch-ssh-host-keys" | ncs_cli -u admin
    - echo "request devices sync-from" | ncs_cli -u admin
    - cd test; python3 -m pytest -sv dryrun_tests/test_config_dns.py

Test config-ntp Package:
  stage: NSO Dryrun Tests
  script:
    - mkdir -p /nso/run/packages
    - cp -af release/* /nso/run/packages
    - ln -s /opt/ncs/current/packages/neds/cisco-ios-cli-3.8 /nso/run/packages/cisco-ios-cli
    - /run-nso.sh > /dev/null 2>&1 &
    - bash nso/check_nso_readiness.sh
    - ncs_load -lm nso/ci_setup.xml -u admin
    - ncs_load -lm nso/load_devices.xml -u admin
    - echo "request devices fetch-ssh-host-keys" | ncs_cli -u admin
    - echo "request devices sync-from" | ncs_cli -u admin
    - cd test; python3 -m pytest -sv dryrun_tests/test_config_ntp.py

Clean Up CML:
  stage: Clean Up CML
  script:
    - python3 cml/cml_stop_lab.py
